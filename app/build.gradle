import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

android {
    signingConfigs {
        config {
            def propsFile = rootProject.file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                if (Os.isFamily(Os.FAMILY_MAC)) {
                    storeFile file(props['storeFileMac'])
                }
                if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                    storeFile file(props['storeFileWin'])
                }
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId 'com.tommihirvonen.exifnotes'
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 35
        versionName "1.17.0"
        // Enabling this allows us to use resources when PNGs are generated during build-time
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        def propsFile = rootProject.file('googlemapsapi.properties')
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                resValue "string", "google_maps_key", props['googleMapsKey']
            } else {
                resValue "string", "google_maps_key", ''
            }
        }
        debug {
            signingConfig signingConfigs.config
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                resValue "string", "google_maps_key", props['googleMapsKey']
            } else {
                resValue "string", "google_maps_key", ''
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }

    return void // Used to mute a warning about not all execution paths returning a value
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0-native-mt'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'androidx.fragment:fragment-ktx:1.4.0-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
}
repositories {
    mavenCentral()
}
